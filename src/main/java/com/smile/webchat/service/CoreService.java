/**   
* @Title: CoreService.java
* @Package: com.smile.webchat.service
* @Description: 
* @author: 杨辉  
* @date: 2017年6月20日 上午10:24:26
*
*/
package com.smile.webchat.service;

import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import com.smile.webchat.message.response.Image;
import com.smile.webchat.message.response.ImageResponseMessage;
import com.smile.webchat.message.response.TextResponseMessage;
import com.smile.webchat.message.response.Voice;
import com.smile.webchat.message.response.VoiceResponseMessage;
import com.smile.webchat.util.MessageUtil;

/**
* @ClassName: CoreService
* @Description: 核心服务类
* @author: 杨辉
* @date: 2017年6月20日 上午10:24:26
* 
*/
public class CoreService {

	/**
     * 处理微信发来的请求
     * @param request
     * @return xml
     */
    public static String processRequest(HttpServletRequest request) {
        // xml格式的消息数据
        String respXml = null;
        // 默认返回的文本消息内容
        String respContent = "未知的消息类型！";
        try {
            // 调用parseXml方法解析请求消息
            Map<String, String> requestMap = MessageUtil.parseXml(request);
            // 发送方帐号
            String fromUserName = requestMap.get("FromUserName");
            // 开发者微信号
            String toUserName = requestMap.get("ToUserName");
            // 消息类型
            String msgType = requestMap.get("MsgType");

            // 回复文本消息
            TextResponseMessage textMessage = new TextResponseMessage();
            textMessage.setToUserName(fromUserName);
            textMessage.setFromUserName(toUserName);
            textMessage.setCreateTime(new Date().getTime());
            textMessage.setMsgType(MessageUtil.RESP_MESSAGE_TYPE_TEXT);

            // 文本消息
            if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_TEXT)) {
                respContent = "您发送的是文本消息！";
            }
            // 图片消息
            else if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_IMAGE)) {
                respContent = "您发送的是图片消息！";
                
                ImageResponseMessage message = new ImageResponseMessage();
                message.setCreateTime(new Date().getTime());
                message.setFromUserName(toUserName);
                message.setToUserName(fromUserName);
                message.setMsgType(MessageUtil.RESP_MESSAGE_TYPE_IMAGE);
                Image image = new Image();
                image.setMediaId("DLN8G9-InHCBWac_qZ8zOBnzB57dCO6o4WGzJaP_4TrknyNSR9K46CdJCE08fzwF");
                message.setImage(image);
                
                respXml = MessageUtil.messageToXml(message);
                return respXml;
            }
            // 语音消息
            else if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_VOICE)) {
                respContent = "您发送的是语音消息！";
            }
            // 视频消息
            else if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_VIDEO)) {
                respContent = "您发送的是视频消息！";
            }
            // 视频消息
            else if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_SHORTVIDEO)) {
                respContent = "您发送的是小视频消息！";
            }
            // 地理位置消息
            else if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_LOCATION)) {
                respContent = "您发送的是地理位置消息！";
            }
            // 链接消息
            else if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_LINK)) {
                respContent = "您发送的是链接消息！";
            }
            // 事件推送
            else if (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_EVENT)) {
                // 事件类型
                String eventType = requestMap.get("Event");
                // 关注
                if (eventType.equals(MessageUtil.EVENT_TYPE_SUBSCRIBE)) {
                    respContent = "谢谢您的关注！";
                }
                // 取消关注
                else if (eventType.equals(MessageUtil.EVENT_TYPE_UNSUBSCRIBE)) {
                    // TODO 取消订阅后用户不会再收到公众账号发送的消息，因此不需要回复
                }
                // 扫描带参数二维码
                else if (eventType.equals(MessageUtil.EVENT_TYPE_SCAN)) {
                    // TODO 处理扫描带参数二维码事件
                }
                // 上报地理位置
                else if (eventType.equals(MessageUtil.EVENT_TYPE_LOCATION)) {
                    // TODO 处理上报地理位置事件
                }
                // 自定义菜单
                else if (eventType.equals(MessageUtil.EVENT_TYPE_CLICK)) {
                    // TODO 处理菜单点击事件
                	
                	// 事件KEY值，与创建自定义菜单时指定的KEY值对应  
                    String eventKey = requestMap.get("EventKey");  
                    
                    //自定义菜单：联系我
                    if (eventKey.equals("33")){
                    	StringBuilder sb = new StringBuilder();
                    	sb.append("联系QQ：735308529").append("\n");
                    	sb.append("联系电话：18217547896");
                    	respContent = sb.toString();
                    }
                    
                    if(eventKey.equals("21")){
                    	//文本消息
                    	respContent = "我喜欢HelloKitty，你喜欢什么？";
                    	
                    }else if(eventKey.equals("22")){
                    	//图片消息
                    	ImageResponseMessage message = new ImageResponseMessage();
                        message.setCreateTime(new Date().getTime());
                        message.setFromUserName(toUserName);
                        message.setToUserName(fromUserName);
                        message.setMsgType(MessageUtil.RESP_MESSAGE_TYPE_IMAGE);
                        Image image = new Image();
                        image.setMediaId("yxfgmExnWqf9PxKMeK5Hah9bfp6czM8Y5kxUGDJfemE");
                        message.setImage(image);
                        respXml = MessageUtil.messageToXml(message);
                    	
                    }else if(eventKey.equals("23")){
                    	//语音消息
                    	VoiceResponseMessage message = new VoiceResponseMessage();
                    	message.setCreateTime(new Date().getTime());
                        message.setFromUserName(toUserName);
                        message.setToUserName(fromUserName);
                        message.setMsgType(MessageUtil.RESP_MESSAGE_TYPE_VOICE);
                        Voice voice = new Voice();
                        voice.setMediaId("");
                        message.setVoice(voice);
                        respXml = MessageUtil.messageToXml(message);
                    	
                    }else if(eventKey.equals("24")){
                    	//视频消息
                    	
                    }else if(eventKey.equals("25")){
                    	
                    }else if(eventKey.equals("31")){
                    	
                    }
                }
            }
            // 设置文本消息的内容
            textMessage.setContent(respContent);
            // 将文本消息对象转换成xml
            respXml = MessageUtil.messageToXml(textMessage);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return respXml;
    }
}
